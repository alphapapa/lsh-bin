#!/usr/bin/env python
import dbus
import argparse
import sys

item              = "org.freedesktop.Notifications"
path              = "/org/freedesktop/Notifications"
interface         = "org.freedesktop.Notifications"

if len(sys.argv) > 1 and sys.argv[1] == '--test':
    import subprocess
    # Exception handling baroquery because it's not possible to redirect to dev null in python
    # Why am I torturing myself with this joke language again?
    try:
        subprocess.check_output(['canx'], stderr=subprocess.STDOUT)
    except subprocess.CalledProcessError as pythonSucks:
        exit(pythonSucks.returncode)
    exit()

parser = argparse.ArgumentParser("Post a desktop notification")
parser.add_argument("-r", help="ID of notification to replace", default=0)
parser.add_argument("-u", help="Urgency level (low|0|normal|1|critical|2", default='1')
parser.add_argument("-t", help="Msec until notification expires", type=int, default=-1)
parser.add_argument("-a", help="Application name (defaults to 'feedback')", default="feedback")
parser.add_argument("-i", help="Icon path", default="")
parser.add_argument("-c", help="Notification category", default="")
parser.add_argument("summary", help="Summary of the notification.", default="")
parser.add_argument("body", nargs=argparse.REMAINDER, help="Body of the notification.", default="")

try:
    args = parser.parse_args()
except SystemExit as ex:
    class NS(dict): 
        def __getattr__(self, name): 
            return self[name] 

    args = NS({
        'u': '2',
        'body': sys.argv,
        'r': 0,
        'a': 'feedback',
        'summary': 'Invalid invocation of feedback:',
        'c': 'error',
        't': -1,
        'i': ''
    })

urgency = {
    'low': 0,
    'normal': 1,
    'critical': 2,
    '0': 0,
    '1': 1,
    '2': 2
}[args.u]

body = " ".join(args.body)
try:
    replace = int(args.r)
except ValueError:
    replace = 0

bus = dbus.SessionBus()
notif = bus.get_object(item, path)
notify = dbus.Interface(notif, interface)
print( notify.Notify(
 args.a,
 replace,
 args.i, 
 args.summary,
 body, 
 [], # actions as pairs of 'action', 'Human name', ...
 dbus.Dictionary({'urgency': dbus.Byte(urgency), 'category': args.c}, signature='sv'),
 args.t))
